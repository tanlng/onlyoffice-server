name: s3 Storage Tests
on:
  push:
    branches:
      - '**'
    paths:
      - 'tests/integration/withServerInstance/storage.tests.js'
      - 'Common/sources/storage/**'
      - 'DocService/sources/routes/static.js'
      - '.github/workflows/s3storageTests.yml'

jobs:
  storage-tests:
    name: Storage Tests
    runs-on: ubuntu-latest
    env:
      MINIO_CONTAINER: minio-${{ github.run_id }}-${{ github.run_attempt }}

    steps:
      - name: Pre-run cleanup
        run: |
          docker rm -f "$MINIO_CONTAINER" 2>/dev/null || true
          # Remove legacy container name if it exists (for self-hosted runners or retries)
          docker rm -f minio 2>/dev/null || true

      - name: Run MinIO docker container
        run: |
          docker run --name "$MINIO_CONTAINER" \
            -p 9000:9000 \
            -p 9001:9001 \
            -e "MINIO_ROOT_USER=minioadmin" \
            -e "MINIO_ROOT_PASSWORD=minioadmin" \
            -d minio/minio server /data --console-address ":9001"

      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Caching dependencies
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: |
            ./npm-shrinkwrap.json
            ./Common/npm-shrinkwrap.json
            ./DocService/npm-shrinkwrap.json

      - name: Install modules
        run: |
          npm ci
          npm --prefix Common ci
          npm --prefix DocService ci

      - name: Creating storage configuration
        run: |
          echo '{
            "storage": {
              "name": "storage-s3",
              "region": "us-east-1",
              "endpoint": "http://localhost:9000",
              "bucketName": "cache",
              "storageFolderName": "files",
              "commandOptions": {
                "putObject": {
                  "ServerSideEncryption": "AES256"
                },
                "copyObject": {
                  "ServerSideEncryption": "AES256"
                }
              },
              "accessKeyId": "minioadmin",
              "secretAccessKey": "minioadmin",
              "forcePathStyle": true
            },
            "persistentStorage": {
              "storageFolderName": "files/persistent"
            }
          }' >> Common/config/local.json

      - name: Create MinIO buckets
        run: |
          docker exec "$MINIO_CONTAINER" mc alias set myminio http://localhost:9000 minioadmin minioadmin
          docker exec "$MINIO_CONTAINER" mc mb myminio/cache

      - name: Run storage tests
        run: npm run storage-tests

      - name: Final cleanup
        if: always()
        run: docker rm -f "$MINIO_CONTAINER" || true