[
  {
    "id": "WhereIsAI/UAE-Large-V1",
    "object": "model",
    "created": 1703216381,
    "type": "embedding",
    "running": false,
    "display_name": "UAE-Large-V1",
    "organization": "WhereIsAI",
    "link": "https://huggingface.co/bert-base-uncased",
    "license": "apache-2.0",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.016,
      "output": 0.016,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-4-Maverick-17B-128E-Instruct-FP8",
    "object": "model",
    "created": 1743878353,
    "type": "chat",
    "running": false,
    "display_name": "Llama 4 Maverick Instruct (17Bx128E)",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-4-Maverick-17B-128E-Instruct-FP8",
    "license": "llama4",
    "context_length": 1048576,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- if messages[0]['content'] is string %}\n        {%- set system_message = messages[0]['content']|trim %}\n    {%- else %}\n        {#- FIXME: The processor requires an array, always. #}\n        {%- set system_message = messages[0]['content'][0]['text']|trim %}\n    {%- endif %}\n    {%- set messages = messages[1:] %}\n    {%- set user_supplied_system_message = true %}\n{%- else %}\n    {%- set system_message = \"\" %}\n    {%- set user_supplied_system_message = false %}\n{%- endif %}\n\n{#- System message if the user supplied one #}\n{%- if user_supplied_system_message %}\n    {{- \"<|header_start|>system<|header_end|>\\n\\n\" }}\n    {%- if tools is not none %}\n        {{- \"Environment: ipython\\n\" }}\n    {%- endif %}\n    {%- if tools is not none and not tools_in_user_message %}\n        {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n        {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n        {{- \"Do not use variables.\\n\\n\" }}\n        {%- for t in tools %}\n            {{- t | tojson(indent=4) }}\n            {{- \"\\n\\n\" }}\n        {%- endfor %}\n    {%- endif %}\n    {{- system_message }}\n    {{- \"<|eot|>\" }}\n{%- endif %}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_content = messages[0]['content'] %}\n        {%- set first_user_message = \"\" %}\n        {%- if first_content is string %}\n            {%- set first_user_message = first_content %}\n        {%- else %}\n            {%- for content in first_content %}\n                {%- if content['type'] == 'image' %}\n                    {%- set first_user_message = first_user_message + '<|image|>' %}\n                {%- elif content['type'] == 'text' %}\n                    {%- set first_user_message = first_user_message + content['text'] %}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n        {%- set first_user_message = first_user_message | trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|header_start|>user<|header_end|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n    {{- '<|header_start|>' + message['role'] + '<|header_end|>\\n\\n' }}\n        {%- if message['content'] is string %}\n            {{- message['content'] }}\n        {%- else %}\n            {%- for content in message['content'] %}\n                {%- if content['type'] == 'image' %}\n                    {{- '<|image|>' }}\n                {%- elif content['type'] == 'text' %}\n                    {{- content['text'] }}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n        {{- \"<|eot|>\" }}\n    {%- elif 'tool_calls' in message and message.tool_calls|length > 0 %}\n      {{- '<|header_start|>assistant<|header_end|>\\n\\n' -}}\n      {{- '<|python_start|>' }}\n        {%- if message['content'] is string %}\n            {{- message['content'] }}\n        {%- else %}\n            {%- for content in message['content'] %}\n                {%- if content['type'] == 'image' %}\n                    {{- '<|image|>' }}\n                {%- elif content['type'] == 'text' %}\n                    {{- content['text'] }}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n      {{- '<|python_end|>' }}\n        {%- for tool_call in message.tool_calls %}\n          {{- '{\"name\": \"' + tool_call.function.name + '\", ' }}\n          {{- '\"parameters\": ' }}\n          {{- tool_call.function.arguments | tojson }}\n          {{- \"}\" }}\n        {%- endfor %}\n      {{- \"<|eot|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|header_start|>ipython<|header_end|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|header_start|>assistant<|header_end|>\\n\\n' }}\n{%- endif %}",
      "stop": [
        "<|eot|>",
        "<|eom|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.27,
      "output": 0.85,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "togethercomputer/m2-bert-80M-32k-retrieval",
    "object": "model",
    "created": 1699120644,
    "type": "embedding",
    "running": false,
    "display_name": "M2-BERT-Retrieval-32k",
    "organization": "Together",
    "link": "https://huggingface.co/togethercomputer/m2-bert-80M-32k-retrieval",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.008,
      "output": 0.008,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "google/gemma-2-9b-it",
    "object": "model",
    "created": 1708648606,
    "type": "chat",
    "running": false,
    "display_name": "Gemma-2 Instruct (9B)",
    "organization": "google",
    "link": "https://huggingface.co/google/gemma-2-9b-it",
    "license": "gemma",
    "context_length": 8192,
    "config": {
      "chat_template": "{{ bos_token }}{% for message in messages %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '\n' + message['content'] | trim + '<end_of_turn>\n' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model\n'}}{% endif %}",
      "stop": [
        "<end_of_turn>",
        "<eos>"
      ],
      "bos_token": "<bos>",
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.3,
      "output": 0.3,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "cartesia/sonic",
    "object": "model",
    "created": 0,
    "type": "audio",
    "running": false,
    "display_name": "Cartesia Sonic",
    "organization": "Together",
    "link": "https://www.cartesia.ai",
    "context_length": 0,
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 65,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "BAAI/bge-large-en-v1.5",
    "object": "model",
    "created": 1700837688,
    "type": "embedding",
    "running": false,
    "display_name": "BAAI-Bge-Large-1p5",
    "organization": "BAAI",
    "license": "MIT",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.016,
      "output": 0.016,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO",
    "object": "model",
    "created": 1705292440,
    "type": "chat",
    "running": false,
    "display_name": "Nous Hermes 2 Mixtral 8X7B Dpo",
    "organization": "Nousresearch",
    "link": "https://huggingface.co/api/models/NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": "{{bos_token}}{% for message in messages %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<s>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.6,
      "output": 0.6,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-2-13b-chat-hf",
    "object": "model",
    "created": 1689720415,
    "type": "chat",
    "running": false,
    "display_name": "LLaMA-2 Chat (13B)",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-2-13b-chat-hf",
    "license": "LLaMA license Agreement (Meta)",
    "context_length": 4096,
    "config": {
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "stop": [
        "[/INST]",
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.22,
      "output": 0.22,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1-schnell-Free",
    "object": "model",
    "created": 0,
    "type": "image",
    "running": false,
    "display_name": "FLUX.1 [schnell] Free",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-schnell",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1.1-pro",
    "object": "model",
    "created": 0,
    "type": "image",
    "running": false,
    "display_name": "FLUX1.1 [pro]",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-schnell",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Qwen/Qwen2.5-7B-Instruct-Turbo",
    "object": "model",
    "created": 1728671048,
    "type": "chat",
    "running": false,
    "display_name": "Qwen2.5 7B Instruct Turbo",
    "organization": "Qwen",
    "link": "https://huggingface.co/Qwen/Qwen2.5-7B-Instruct",
    "license": "Qwen",
    "context_length": 32768,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Qwen, created by Alibaba Cloud. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.3,
      "output": 0.3,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "deepseek-ai/DeepSeek-R1-Distill-Llama-70B-free",
    "object": "model",
    "created": 1738187359,
    "type": "chat",
    "running": false,
    "display_name": "DeepSeek R1 Distill Llama 70B Free",
    "organization": "DeepSeek",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-70B",
    "license": "mit",
    "context_length": 8192,
    "config": {
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set system_prompt='' %}{% set is_tool = false %}{%- for message in messages %}{%- if message['role'] == 'system' %}{% set system_prompt = message['content'] %}{%- endif %}{%- endfor %}{{bos_token}}{{system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set is_tool = false -%}{%- set is_output_first = true -%}{%- set is_first = false -%}{%- for tool in message['tool_calls']%}{%- if is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set is_first = true -%}{%- else %}{{'\\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set is_tool = false -%}{%- else %}{% set content = message['content'] %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}{{'<｜Assistant｜>' + content + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set is_tool = true -%}{%- if is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set is_output_first = false %}{%- else %}{{'\\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ],
      "bos_token": "<｜begin▁of▁sentence｜>",
      "eos_token": "<｜end▁of▁sentence｜>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama-llama-2-70b-hf",
    "object": "model",
    "created": 1736983494,
    "type": "language",
    "running": false,
    "display_name": "LLaMA-2 (70B)",
    "link": "https://huggingface.co/api/models/meta-llama/Llama-2-70b-hf",
    "license": "llama2",
    "context_length": 4096,
    "config": {
      "chat_template": null,
      "stop": [
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.9,
      "output": 0.9,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "BAAI/bge-base-en-v1.5",
    "object": "model",
    "created": 1700837779,
    "type": "embedding",
    "running": false,
    "display_name": "BAAI-Bge-Base-1.5",
    "organization": "BAAI",
    "link": "https://huggingface.co/api/models/BAAI/bge-base-en-v1.5",
    "license": "MIT",
    "context_length": 512,
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": "[PAD]",
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.008,
      "output": 0.008,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Gryphe/MythoMax-L2-13b",
    "object": "model",
    "created": 1693943905,
    "type": "chat",
    "running": false,
    "display_name": "MythoMax-L2 (13B)",
    "organization": "Gryphe",
    "license": "other",
    "context_length": 4096,
    "config": {
      "chat_template": "{% for message in messages %}{% if message['role'] == 'user' %}{{ '### Instruction:\n' + message['content'] + '\n' }}{% else %}{{ '### Response:\n' + message['content'] + '\n' }}{% endif %}{% endfor %}{{ '### Response:' }}",
      "stop": [
        "</s>"
      ],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.3,
      "output": 0.3,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "google/gemma-2-27b-it",
    "object": "model",
    "created": 1708648606,
    "type": "chat",
    "running": false,
    "display_name": "Gemma-2 Instruct (27B)",
    "organization": "Google",
    "link": "https://huggingface.co/google/gemma-2b-it",
    "license": "gemma-terms-of-use",
    "context_length": 8192,
    "config": {
      "chat_template": "{{ bos_token }}{% for message in messages %}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{{ '<start_of_turn>' + role + '\n' + message['content'] | trim + '<end_of_turn>\n' }}{% endfor %}{% if add_generation_prompt %}{{'<start_of_turn>model\n'}}{% endif %}",
      "stop": [
        "<eos>",
        "<end_of_turn>"
      ],
      "bos_token": "<bos>",
      "eos_token": "<end_of_turn>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.8,
      "output": 0.8,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Qwen/Qwen2-VL-72B-Instruct",
    "object": "model",
    "created": 1736448718,
    "type": "chat",
    "running": false,
    "display_name": "Qwen2-VL (72B) Instruct",
    "organization": "Qwen",
    "link": "https://huggingface.co/Qwen/Qwen2-VL-72B-Instruct",
    "license": "tongyi-qianwen",
    "context_length": 32768,
    "config": {
      "chat_template": "{% set image_count = namespace(value=0) %}{% set video_count = namespace(value=0) %}{% for message in messages %}{% if loop.first and message['role'] != 'system' %}<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n{% endif %}<|im_start|>{{ message['role'] }}\n{% if message['content'] is string %}{{ message['content'] }}<|im_end|>\n{% else %}{% for content in message['content'] %}{% if content['type'] == 'image' or 'image' in content or 'image_url' in content %}{% set image_count.value = image_count.value + 1 %}{% if add_vision_id %}Picture {{ image_count.value }}: {% endif %}<|vision_start|><|image_pad|><|vision_end|>{% elif content['type'] == 'video' or 'video' in content %}{% set video_count.value = video_count.value + 1 %}{% if add_vision_id %}Video {{ video_count.value }}: {% endif %}<|vision_start|><|video_pad|><|vision_end|>{% elif 'text' in content %}{{ content['text'] }}{% endif %}{% endfor %}<|im_end|>\n{% endif %}{% endfor %}{% if add_generation_prompt %}<|im_start|>assistant\n{% endif %}",
      "stop": [
        "<|im_end|>",
        "<|endoftext|>"
      ],
      "bos_token": null,
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 1.2,
      "output": 1.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/LlamaGuard-2-8b",
    "object": "model",
    "created": 1713429380,
    "type": "moderation",
    "running": false,
    "display_name": "Meta Llama Guard 2 8B",
    "organization": "Meta",
    "link": null,
    "license": "Llama-3 (Other)",
    "context_length": 8192,
    "config": {
      "chat_template": "{% if messages.length % 2 == 0 %}{% set final_role = 'Agent' %}{% else %}{% set final_role = 'User' %}{% endif %}[INST] Task: Check if there is unsafe content in '{{ final_role }}' messages in conversations according our safety policy with the below categories.\n\n<BEGIN UNSAFE CONTENT CATEGORIES>\nS1: Violent Crimes.\nS2: Non-Violent Crimes.\nS3: Sex Crimes.\nS4: Child Exploitation.\nS5: Specialized Advice.\nS6: Privacy.\nS7: Intellectual Property.\nS8: Indiscriminate Weapons.\nS9: Hate.\nS10: Self-Harm.\nS11: Sexual Content.\n<END UNSAFE CONTENT CATEGORIES>\n\n<BEGIN CONVERSATION>\n\n{% for message in messages %}{% if message['role'] == 'user' and loop.index0 % 2 == 0 %}User: {{ message['content'].trim() }}{% elif message['role'] == 'assistant' and loop.index0 % 2 != 0 %}Agent: {{ message['content'].trim() }}{% else %}{{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...') }}{% endif %}{% if loop.last %}{% set role = message['role'] %}{% endif %}{{ '\n\n' }}{% endfor %}<END CONVERSATION>\n\nProvide your safety assessment for ONLY THE LAST {{ role }} message in the above conversation:\n - First line must read 'safe' or 'unsafe'.\n - If unsafe, a second line must include a comma-separated list of violated categories. [/INST]",
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.2,
      "output": 0.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "cartesia/sonic-2",
    "object": "model",
    "created": 0,
    "type": "audio",
    "running": false,
    "display_name": "Cartesia Sonic 2",
    "organization": "Together",
    "link": "https://www.cartesia.ai",
    "context_length": 0,
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 65,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "togethercomputer/m2-bert-80M-8k-retrieval",
    "object": "model",
    "created": 1699120644,
    "type": "embedding",
    "running": false,
    "display_name": "M2-BERT-Retrieval-8k",
    "organization": "Together",
    "link": "https://huggingface.co/togethercomputer/m2-bert-80M-8k-retrieval",
    "license": "apache-2.0",
    "context_length": 8192,
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.008,
      "output": 0.008,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-3.3-70B-Instruct-Turbo-Free",
    "object": "model",
    "created": 1733967427,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3.3 70B Instruct Turbo Free",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct",
    "license": "Llama-3.3 (Other)",
    "context_length": 131072,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "togethercomputer/MoA-1",
    "object": "model",
    "created": 1733856970,
    "type": "chat",
    "running": false,
    "display_name": "Together AI MoA-1",
    "organization": "Together AI",
    "link": "https://github.com/togethercomputer/MoA",
    "context_length": 32768,
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Meta-Llama-3-70B-Instruct-Turbo",
    "object": "model",
    "created": 0,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3 70B Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-70B-Instruct",
    "license": "Llama-3 (Other)",
    "context_length": 8192,
    "config": {
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "stop": [
        "<|eot_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|end_of_text|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.88,
      "output": 0.88,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "mistralai/Mistral-7B-Instruct-v0.2",
    "object": "model",
    "created": 1702325373,
    "type": "chat",
    "running": false,
    "display_name": "Mistral (7B) Instruct v0.2",
    "organization": "mistralai",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "stop": [
        "[/INST]",
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.2,
      "output": 0.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "togethercomputer/m2-bert-80M-2k-retrieval",
    "object": "model",
    "created": 1699985626,
    "type": "embedding",
    "running": false,
    "display_name": "M2-BERT-Retrieval-2K",
    "organization": "Together",
    "license": "Apache-2",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.008,
      "output": 0.008,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "google/gemma-2b-it",
    "object": "model",
    "created": 1708648606,
    "type": "chat",
    "running": false,
    "display_name": "Gemma Instruct (2B)",
    "organization": "Google",
    "link": "https://huggingface.co/google/gemma-2b-it",
    "license": "gemma-terms-of-use",
    "context_length": 8192,
    "config": {
      "chat_template": "{{ bos_token }}{% if (message['role'] == 'assistant') %}{% set role = 'model' %}{% else %}{% set role = message['role'] %}{% endif %}{% for message in messages %}{{'<start_of_turn>' + role + '\n' + message['content'] + '<end_of_turn>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>model\n' }}{% endif %}",
      "stop": [
        "<eos>",
        "<end_of_turn>"
      ],
      "bos_token": "<bos>",
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.1,
      "output": 0.1,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1-pro",
    "object": "model",
    "created": 0,
    "type": "image",
    "running": false,
    "display_name": "FLUX.1 [pro]",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-schnell",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "mistralai/Mistral-Small-24B-Instruct-2501",
    "object": "model",
    "created": 1738246136,
    "type": "chat",
    "running": false,
    "display_name": "Mistral Small (24B) Instruct 25.01",
    "organization": "mistralai",
    "link": "https://huggingface.co/mistralai/Mistral-Small-Instruct-2501",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": "{%- if messages[0][\"role\"] == \"system\" %}{%- set system_message = messages[0][\"content\"] %}{%- set loop_messages = messages[1:] %}{%- else %}{%- set today = strftime_now(\"%Y-%m-%d\") %}{%- set system_message = \"You are Mistral Small 3, a Large Language Model (LLM) created by Mistral AI, a French startup headquartered in Paris.\\nYour knowledge base was last updated on 2023-10-01. The current date is \" + today + \".\\n\\nWhen you're not sure about some information, you say that you don't have the information and don't make up anything.\\nIf the user's question is not clear, ambiguous, or does not provide enough context for you to accurately answer the question, you do not try to answer it right away and you rather ask the user to clarify their request (e.g. \\\"What are some good restaurants around me?\\\" => \\\"Where are you?\\\" or \\\"When is the next flight to Tokyo\\\" => \\\"Where do you travel from?\\\")\" %}{%- set loop_messages = messages %}{%- endif %}{%- if not tools is defined %}{%- set tools = none %}{%- elif tools is not none %}{%- set parallel_tool_prompt = \"You are a helpful assistant that can call tools. If you call one or more tools, format them in a single JSON array or objects, where each object is a tool call, not as separate objects outside of an array or multiple arrays. Use the format [{\\\"name\\\": tool call name, \\\"arguments\\\": tool call arguments}, additional tool calls] if you call more than one tool. If you call tools, do not attempt to interpret them or otherwise provide a response until you receive a tool call result that you can interpret for the user.\" %}{%- if system_message is defined %}{%- set system_message = parallel_tool_prompt + \"\\n\\n\" + system_message %}{%- else %}{%- set system_message = parallel_tool_prompt %}{%- endif %}\n{%- endif %}{%- set user_messages = loop_messages | selectattr(\"role\", \"equalto\", \"user\") | list %}{%- for message in loop_messages | rejectattr(\"role\", \"equalto\", \"tool\") | rejectattr(\"role\", \"equalto\", \"tool_results\") | selectattr(\"tool_calls\", \"undefined\") %}{%- if (message[\"role\"] == \"user\") != (loop.index0 % 2 == 0) %}{{- raise_exception(\"After the optional system message, conversation roles must alternate user/assistant/user/assistant/...\") }}{%- endif %}{%- endfor %}{{- bos_token }}{%- for message in loop_messages %}{%- if message[\"role\"] == \"user\" %}{%- if tools is not none and (message == user_messages[user_messages.length-1]) %}{{- \"[AVAILABLE_TOOLS] [\" }}{%- for tool in tools %}{%- set tool = tool.function %}{{- '{\"type\": \"function\", \"function\": {' }}{%- for key, val in tool.items() if key != \"return\" %}{%- if val is string %}{{- '\"' + key + '\": \"' + val + '\"' }}{%- else %}{{- '\"' + key + '\": ' + val|tojson }}{%- endif %}{%- if not loop.last %}{{- \", \" }}{%- endif %}{%- endfor %}{{- \"}}\" }}{%- if not loop.last %}{{- \", \" }}{%- else %}{{- \"]\" }}{%- endif %}{%- endfor %}{{- \"[/AVAILABLE_TOOLS]\" }}{%- endif %}{%- if loop.last and system_message is defined %}{{- \"[SYSTEM_PROMPT]\" + system_message + \"[/SYSTEM_PROMPT][INST]\" + message[\"content\"] + \"[/INST]\" }}{%- else %}{{- \"[INST]\" + message[\"content\"] + \"[/INST]\" }}{%- endif %}{%- elif message[\"role\"] == \"tool_calls\" or message.tool_calls is defined %}{%- if message.tool_calls is defined %}{%- set tool_calls = message.tool_calls %}{%- else %}{%- set tool_calls = message.content %}{%- endif %}{{- \"[TOOL_CALLS] [\" }}{%- for tool_call in tool_calls %}{%- set out = tool_call.function|tojson %}{{- out }}{%- if not tool_call.id is defined or tool_call.id|length < 9 %}{{- raise_exception(\"Tool call IDs should be alphanumeric strings with length >= 9! (1)\" + tool_call.id) }}{%- endif %}{{- ', \"id\": \"' + tool_call.id + '\"}' }}{%- if not loop.last %}{{- \", \" }}{%- else %}{{- \"]\" + eos_token }}{%- endif %}{%- endfor %}{%- elif message[\"role\"] == \"assistant\" %}{{- \" \" + message[\"content\"] + eos_token }}{%- elif message[\"role\"] == \"tool_results\" or message[\"role\"] == \"tool\" %}{%- if message.content is defined and message.content.content is defined %}{%- set content = message.content.content %}{%- else %}{%- set content = message.content %}{%- endif %}{{- '[TOOL_RESULTS] {\"content\": ' + content|string + \", \" }}{%- if not message.tool_call_id is defined or message.tool_call_id|length < 9 %}{{- raise_exception(\"Tool call IDs should be alphanumeric strings with length >= 9! (2)\" + message.tool_call_id) }}{%- endif %}{{- '\"call_id\": \"' + message.tool_call_id + '\"}[/TOOL_RESULTS]' }}{%- else %}{{- raise_exception(\"Only user and assistant roles are supported, with the exception of an initial optional system message!\") }}{%- endif %}\n{%- endfor %}",
      "stop": [
        "[/INST]",
        "</s>"
      ],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.8,
      "output": 0.8,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Gryphe/MythoMax-L2-13b-Lite",
    "object": "model",
    "created": 1693943905,
    "type": "chat",
    "running": false,
    "display_name": "Gryphe MythoMax L2 Lite (13B)",
    "organization": "Gryphe",
    "license": "other",
    "context_length": 4096,
    "config": {
      "chat_template": "{% for message in messages %}{% if message['role'] == 'user' %}{{ '### Instruction:\n' + message['content'] + '\n' }}{% else %}{{ '### Response:\n' + message['content'] + '\n' }}{% endif %}{% endfor %}{{ '### Response:' }}",
      "stop": [
        "</s>"
      ],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.1,
      "output": 0.1,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "scb10x/scb10x-llama3-1-typhoon2-70b-instruct",
    "object": "model",
    "created": 1743036812,
    "type": "chat",
    "running": false,
    "display_name": "Typhoon 2 70B Instruct",
    "organization": "SCB10X",
    "link": "https://huggingface.co/api/models/scb10x/llama3.1-typhoon2-70b-instruct",
    "license": "llama3.1",
    "context_length": 8192,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{{- system_message }}\n{%- if tools is not none %}\n    {{- \"\\n\" }}\n    {{- \"You are given a question and a set of possible functions. Based on the question, you will need to make one or more function/tool calls to achieve the purpose.\" }}\n    {{- \"If none of the function can be used, point it out. If the given question lacks the parameters required by the function, also point it out.\" }}\n    {{- \"You should only return the function call in tools call sections.\" }}\n    {{- \"If you decide to invoke any of the function(s), you MUST put it in the format of [Function(arguments1={{params_name1: params_value1,params_name2: params_value2, ...}},  name1=function_name1), Function(arguments2={{params}},  name2=function_name2) , ...]\"}}\n    {{- \"You SHOULD NOT include any other text in the response.\\nHere is a list of functions in JSON format that you can invoke.\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- \"<|eot_id|>\" }}\n\n\n{%- for message in messages %}\n    {%- if not (message.role == 'tool') %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif message.role == \"tool\" %}\n        {{- \"<|start_header_id|>tool<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}",
      "stop": [
        "<|eot_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.88,
      "output": 0.88,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1-redux",
    "object": "model",
    "created": 1732148338,
    "type": "image",
    "running": false,
    "display_name": "FLUX.1 Redux [dev]",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-Redux-dev",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Meta-Llama-Guard-3-8B",
    "object": "model",
    "created": 1713429380,
    "type": "moderation",
    "running": false,
    "display_name": "Meta Llama Guard 3 8B",
    "organization": "Meta",
    "link": null,
    "license": "llama",
    "context_length": 8192,
    "config": {
      "chat_template": "{% if messages.length % 2 == 0 %}{% set final_role = 'Agent' %}{% else %}{% set final_role = 'User' %}{% endif %}<|begin_of_text|><|start_header_id|>user<|end_header_id|>\n\nTask: Check if there is unsafe content in '{{ final_role }}' messages in conversations according our safety policy with the below categories.\n\n<BEGIN UNSAFE CONTENT CATEGORIES>\nS1: Violent Crimes.\nS2: Non-Violent Crimes.\nS3: Sex Crimes.\nS4: Child Exploitation.\nS5: Defamation.\nS6: Specialized Advice.\nS7: Privacy.\nS8: Intellectual Property.\nS9: Indiscriminate Weapons.\nS10: Hate.\nS11: Self-Harm.\nS12: Sexual Content.\nS13: Elections.\nS14: Code Interpreter Abuse.\n<END UNSAFE CONTENT CATEGORIES>\n\n<BEGIN CONVERSATION>\n\n{% for message in messages %}{% if message['role'] == 'user' and loop.index0 % 2 == 0 %}User: {{ message['content'].trim() }}{% elif message['role'] == 'assistant' and loop.index0 % 2 != 0 %}Agent: {{ message['content'].trim() }}{% endif %}{% if loop.last %}{% set role = message['role'] %}{% endif %}{{ '\n\n' }}{% endfor %}<END CONVERSATION>\n\nProvide your safety assessment for {{ role }} in the above conversation:\n - First line must read 'safe' or 'unsafe'.\n - If unsafe, a second line must include a comma-separated list of violated categories.<|eot_id|><|start_header_id|>assistant<|end_header_id|>\n\n",
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.2,
      "output": 0.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1-depth",
    "object": "model",
    "created": 1732141533,
    "type": "image",
    "running": false,
    "display_name": "FLUX.1 Depth [dev]",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-Depth-dev",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1-canny",
    "object": "model",
    "created": 1732144835,
    "type": "image",
    "running": false,
    "display_name": "FLUX.1 Canny [dev]",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-Canny-dev",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-3-8b-chat-hf",
    "object": "model",
    "created": 1713420479,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3 8B Instruct Reference",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct",
    "license": "Llama-3 (Other)",
    "context_length": 8192,
    "config": {
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "stop": [
        "<|eot_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|end_of_text|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.2,
      "output": 0.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "arcee-ai/caller",
    "object": "model",
    "created": 1743531347,
    "type": "chat",
    "running": false,
    "display_name": "Arcee AI Caller",
    "organization": "Arcee AI",
    "link": "https://huggingface.co/api/models/togethercomputer/arcee-ai-caller",
    "context_length": 32768,
    "config": {
      "chat_template": null,
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.55,
      "output": 0.85,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "togethercomputer/MoA-1-Turbo",
    "object": "model",
    "created": 0,
    "type": "chat",
    "running": false,
    "display_name": "Together AI MoA-1-Turbo",
    "organization": "Together AI",
    "link": "https://github.com/togethercomputer/MoA",
    "license": null,
    "context_length": 32768,
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "mistralai/Mistral-7B-Instruct-v0.1",
    "object": "model",
    "created": 1695860851,
    "type": "chat",
    "running": false,
    "display_name": "Mistral (7B) Instruct",
    "organization": "mistralai",
    "link": "https://huggingface.co/api/models/mistralai/Mistral-7B-Instruct-v0.1",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "stop": [
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.2,
      "output": 0.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "scb10x/scb10x-llama3-1-typhoon2-8b-instruct",
    "object": "model",
    "created": 1743028923,
    "type": "chat",
    "running": false,
    "display_name": "Typhoon 2 8B Instruct",
    "organization": "SCB10X",
    "link": "https://huggingface.co/api/models/scb10x/llama3.1-typhoon2-8b-instruct",
    "license": "llama3.1",
    "context_length": 8192,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{{- system_message }}\n{%- if tools is not none %}\n    {{- \"\\n\" }}\n    {{- \"You are given a question and a set of possible functions. Based on the question, you will need to make one or more function/tool calls to achieve the purpose.\" }}\n    {{- \"If none of the function can be used, point it out. If the given question lacks the parameters required by the function, also point it out.\" }}\n    {{- \"You should only return the function call in tools call sections.\" }}\n    {{- \"If you decide to invoke any of the function(s), you MUST put it in the format of [Function(arguments1={{params_name1: params_value1,params_name2: params_value2, ...}},  name1=function_name1), Function(arguments2={{params}},  name2=function_name2) , ...]\"}}\n    {{- \"You SHOULD NOT include any other text in the response.\\nHere is a list of functions in JSON format that you can invoke.\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- \"<|eot_id|>\" }}\n\n\n{%- for message in messages %}\n    {%- if not (message.role == 'tool') %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif message.role == \"tool\" %}\n        {{- \"<|start_header_id|>tool<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}",
      "stop": [
        "<|eot_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "mistralai/Mixtral-8x7B-v0.1",
    "object": "model",
    "created": 1744319758,
    "type": "language",
    "running": false,
    "display_name": "Mixtral-8x7B v0.1",
    "organization": "mistralai",
    "link": "https://huggingface.co/mistralai/Mixtral-8x7B-v0.1",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.6,
      "output": 0.6,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1-dev-lora",
    "object": "model",
    "created": 1736906515,
    "type": "image",
    "running": false,
    "display_name": "FLUX.1 [dev] LoRA",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-dev",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "deepseek-ai/DeepSeek-R1",
    "object": "model",
    "created": 1737396322,
    "type": "chat",
    "running": false,
    "display_name": "DeepSeek R1",
    "organization": "DeepSeek",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-R1",
    "context_length": 163840,
    "config": {
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set system_prompt='' %}{% set is_tool = false %}{%- for message in messages %}{%- if message['role'] == 'system' %}{% set system_prompt = message['content'] %}{%- endif %}{%- endfor %}{{bos_token}}{{system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set is_tool = false -%}{%- set is_output_first = true -%}{%- set is_first = false -%}{%- for tool in message['tool_calls']%}{%- if is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set is_first = true -%}{%- else %}{{'\\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set is_tool = false -%}{%- else %}{% set content = message['content'] %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}{{'<｜Assistant｜>' + content + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set is_tool = true -%}{%- if is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set is_output_first = false %}{%- else %}{{'\\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ],
      "bos_token": "<｜begin▁of▁sentence｜>",
      "eos_token": "<｜end▁of▁sentence｜>",
      "max_output_length": 32768
    },
    "pricing": {
      "hourly": 0,
      "input": 3,
      "output": 7,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "arcee-ai/arcee-blitz",
    "object": "model",
    "created": 1743449087,
    "type": "chat",
    "running": false,
    "display_name": "Arcee AI Blitz",
    "organization": "Arcee AI",
    "link": "https://huggingface.co/api/models/togethercomputer/Arcee-Blitz",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": "{%- set today = strftime_now(\"%Y-%m-%d\") %}\n{%- set default_system_message = \"You are Arcee Blitz, a Large Language Model (LLM) created by Arcee AI.\\nYour knowledge base was last updated on 2024-10-01. The current date is \" + today + \".\\n\\nWhen you're not sure about some information, you say that you don't have the information and don't make up anything.\\nIf the user's question is not clear, ambiguous, or does not provide enough context for you to accurately answer the question, you do not try to answer it right away and you rather ask the user to clarify their request (e.g. \\\"What are some good restaurants around me?\\\" => \\\"Where are you?\\\" or \\\"When is the next flight to Tokyo\\\" => \\\"Where do you travel from?\\\")\" %}\n\n{{- bos_token }}\n\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content'] %}\n    {%- set loop_messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = default_system_message %}\n    {%- set loop_messages = messages %}\n{%- endif %}\n{{- '[SYSTEM_PROMPT]' + system_message + '[/SYSTEM_PROMPT]' }}\n\n{%- for message in loop_messages %}\n    {%- if message['role'] == 'user' %}\n        {{- '[INST]' + message['content'] + '[/INST]' }}\n    {%- elif message['role'] == 'system' %}\n        {{- '[SYSTEM_PROMPT]' + message['content'] + '[/SYSTEM_PROMPT]' }}\n    {%- elif message['role'] == 'assistant' %}\n        {{- message['content'] + eos_token }}\n    {%- else %}\n        {{- raise_exception('Only user, system and assistant roles are supported!') }}\n    {%- endif %}\n{%- endfor %}",
      "stop": [
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.45,
      "output": 0.75,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "deepseek-ai/DeepSeek-V3-p-dp",
    "object": "model",
    "created": 1740979667,
    "type": "chat",
    "running": false,
    "display_name": "DeepSeek V3",
    "organization": "DeepSeek",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-V3",
    "context_length": 131072,
    "config": {
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set is_first = false %}{% set is_tool = false %}{% set is_output_first = true %}{% set system_prompt='' %}{% set is_first_sp = true %}{%- for message in messages %}{%- if message['role'] == 'system' %}{%- if is_first_sp %}{% set system_prompt = system_prompt + message['content'] %}{% set is_first_sp = false %}{%- else %}{% set system_prompt = system_prompt + '\n\n' + message['content'] %}{%- endif %}{%- endif %}{%- endfor %}{% if tools %}{% set system_prompt = system_prompt + '\n\nYou can access the following functions. Use them if required -\n' + (tools | tojson) + '\n' %}{% endif %}{{bos_token}}{{system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set is_tool = false -%}{%- for tool in message['tool_calls']%}{%- if not is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\n' + '```json' + '\n' + tool['function']['arguments'] + '\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set is_first = true -%}{%- else %}{{'\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\n' + '```json' + '\n' + tool['function']['arguments'] + '\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set is_tool = false -%}{%- else %}{{'<｜Assistant｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set is_tool = true -%}{%- if is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set is_output_first = false %}{%- else %}{{'\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ],
      "bos_token": "<｜begin▁of▁sentence｜>",
      "eos_token": "<｜end▁of▁sentence｜>",
      "max_output_length": 32768
    },
    "pricing": {
      "hourly": 0,
      "input": 1.25,
      "output": 1.25,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "deepseek-ai/DeepSeek-R1-Distill-Qwen-14B",
    "object": "model",
    "created": 1738182549,
    "type": "chat",
    "running": false,
    "display_name": "DeepSeek R1 Distill Qwen 14B",
    "organization": "DeepSeek",
    "link": "https://huggingface.co/api/models/deepseek-ai/DeepSeek-R1-Distill-Qwen-14B",
    "license": "mit",
    "context_length": 131072,
    "config": {
      "chat_template": "{% if not add_generation_prompt %}{% set add_generation_prompt = false %}{% endif %}{# Initialize variables since Nunjucks doesn't support namespace #}{% set is_first = false %}{% set is_tool = false %}{% set is_output_first = true %}{% set system_prompt = '' %}{# Get system prompt #}{% for message in messages %}{% if message.role == 'system' %}{% set system_prompt = message.content %}{% endif %}{% endfor %}{{bos_token}}{{system_prompt}}{% for message in messages %}{% if message.role == 'user' %}{% set is_tool = false %}<｜User｜>{{message.content}}{% endif %}{% if message.role == 'assistant' and not message.content %}{% set is_tool = false %}{% for tool in message.tool_calls %}{% if not is_first %}<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>{{tool.type}}<｜tool▁sep｜>{{tool.function.name}}```json{{tool.function.arguments}}```<｜tool▁call▁end｜>{% set is_first = true %}{% else %}<｜tool▁call▁begin｜>{{tool.type}}<｜tool▁sep｜>{{tool.function.name}}```json{{tool.function.arguments}}```<｜tool▁call▁end｜><｜tool▁calls▁end｜><｜end▁of▁sentence｜>{% endif %}{% endfor %}{% endif %}{% if message.role == 'assistant' and message.content %}{% if is_tool %}<｜tool▁outputs▁end｜>{{message.content}}<｜end▁of▁sentence｜>{% set is_tool = false %}{% else %}{% set content = message.content %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}<｜Assistant｜>{{content}}<｜end▁of▁sentence｜>{% endif %}{% endif %}{% if message.role == 'tool' %}{% set is_tool = true %}{% if is_output_first %}<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>{{message.content}}<｜tool▁output▁end｜>{% set is_output_first = false %}{% else %}<｜tool▁output▁begin｜>{{message.content}}<｜tool▁output▁end｜>{% endif %}{% endif %}{% endfor %}{% if is_tool %}<｜tool▁outputs▁end｜>{% endif %}{% if add_generation_prompt and not is_tool %}<｜Assistant｜>{% endif %}",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ],
      "bos_token": "<｜begin▁of▁sentence｜>",
      "eos_token": "<｜end▁of▁sentence｜>",
      "max_output_length": 32768
    },
    "pricing": {
      "hourly": 0,
      "input": 1.6,
      "output": 1.6,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "deepseek-ai/DeepSeek-V3",
    "object": "model",
    "created": 1735450433,
    "type": "chat",
    "running": false,
    "display_name": "DeepSeek V3-0324",
    "organization": "DeepSeek",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-V3",
    "context_length": 131072,
    "config": {
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set ns = namespace(is_first=false, is_tool=false, is_output_first=true, system_prompt='', is_first_sp=true) %}{%- for message in messages %}{%- if message['role'] == 'system' %}{%- if ns.is_first_sp %}{% set ns.system_prompt = ns.system_prompt + message['content'] %}{% set ns.is_first_sp = false %}{%- else %}{% set ns.system_prompt = ns.system_prompt + '\n\n' + message['content'] %}{%- endif %}{%- endif %}{%- endfor %}{{bos_token}}{{ns.system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set ns.is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set ns.is_tool = false -%}{%- for tool in message['tool_calls']%}{%- if not ns.is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\n' + '```json' + '\n' + tool['function']['arguments'] + '\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set ns.is_first = true -%}{%- else %}{{'\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\n' + '```json' + '\n' + tool['function']['arguments'] + '\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if ns.is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set ns.is_tool = false -%}{%- else %}{{'<｜Assistant｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set ns.is_tool = true -%}{%- if ns.is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set ns.is_output_first = false %}{%- else %}{{'\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if ns.is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not ns.is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ],
      "bos_token": "<｜begin▁of▁sentence｜>",
      "eos_token": "<｜end▁of▁sentence｜>",
      "max_output_length": 12288
    },
    "pricing": {
      "hourly": 0,
      "input": 1.25,
      "output": 1.25,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Qwen/Qwen2.5-VL-72B-Instruct",
    "object": "model",
    "created": 1742408085,
    "type": "chat",
    "running": false,
    "display_name": "Qwen2.5-VL (72B) Instruct",
    "organization": "Qwen",
    "link": "https://huggingface.co/api/models/Qwen/Qwen2.5-VL-72B-Instruct",
    "license": "tongyi-qianwen",
    "context_length": 32768,
    "config": {
      "chat_template": "{% set image_count = namespace(value=0) %}{% set video_count = namespace(value=0) %}{% for message in messages %}{% if loop.first and message['role'] != 'system' %}<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n{% endif %}<|im_start|>{{ message['role'] }}\n{% if message['content'] is string %}{{ message['content'] }}<|im_end|>\n{% else %}{% for content in message['content'] %}{% if content['type'] == 'image' or 'image' in content or 'image_url' in content %}{% set image_count.value = image_count.value + 1 %}{% if add_vision_id %}Picture {{ image_count.value }}: {% endif %}<|vision_start|><|image_pad|><|vision_end|>{% elif content['type'] == 'video' or 'video' in content %}{% set video_count.value = video_count.value + 1 %}{% if add_vision_id %}Video {{ video_count.value }}: {% endif %}<|vision_start|><|video_pad|><|vision_end|>{% elif 'text' in content %}{{ content['text'] }}{% endif %}{% endfor %}<|im_end|>\n{% endif %}{% endfor %}{% if add_generation_prompt %}<|im_start|>assistant\n{% endif %}",
      "stop": [
        "<|im_end|>",
        "<|endoftext|>"
      ],
      "bos_token": null,
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 1.95,
      "output": 8,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Qwen/Qwen2.5-Coder-32B-Instruct",
    "object": "model",
    "created": 1731556615,
    "type": "chat",
    "running": false,
    "display_name": "Qwen 2.5 Coder 32B Instruct",
    "organization": "Qwen",
    "link": "https://huggingface.co/Qwen/Qwen2.5-Coder-32B-Instruct",
    "license": "Qwen",
    "context_length": 16384,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Qwen, created by Alibaba Cloud. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.8,
      "output": 0.8,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-3.3-70B-Instruct-Turbo",
    "object": "model",
    "created": 1733466629,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3.3 70B Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-3.3-70B-Instruct",
    "license": "Llama-3.3 (Other)",
    "context_length": 131072,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.88,
      "output": 0.88,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Qwen/Qwen2-72B-Instruct",
    "object": "model",
    "created": 1744167438,
    "type": "chat",
    "running": false,
    "display_name": "Qwen 2 Instruct (72B)",
    "organization": "Qwen",
    "link": "https://huggingface.co/Qwen/Qwen2-72B-Instruct",
    "license": "tongyi-qianwen",
    "context_length": 32768,
    "config": {
      "chat_template": "{% for message in messages %}{% if loop.first and messages[0]['role'] != 'system' %}{{ '<|im_start|>system\nYou are a helpful assistant.<|im_end|>\n' }}{% endif %}{{'<|im_start|>' + message['role'] + '\n' + message['content'] + '<|im_end|>' + '\n'}}{% endfor %}{% if add_generation_prompt %}{{ '<|im_start|>assistant\n' }}{% endif %}",
      "stop": [
        "<|im_start|>",
        "<|im_end|>"
      ],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0.9,
      "output": 0.9,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "microsoft/WizardLM-2-8x22B",
    "object": "model",
    "created": 1713206398,
    "type": "chat",
    "running": false,
    "display_name": "WizardLM-2 (8x22B)",
    "organization": "microsoft",
    "link": "https://huggingface.co/microsoft/WizardLM-2-8x22B",
    "license": "apache-2.0",
    "context_length": 65536,
    "config": {
      "chat_template": "{% for message in messages %}{{message['role'].toLocaleUpperCase() + ': ' + message['content'] + '\n'}}{% endfor %}{{ 'ASSISTANT: ' }}",
      "stop": [
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 1.2,
      "output": 1.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "deepseek-ai/DeepSeek-R1-Distill-Llama-70B",
    "object": "model",
    "created": 1738048961,
    "type": "chat",
    "running": false,
    "display_name": "DeepSeek R1 Distill Llama 70B",
    "organization": "DeepSeek",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Llama-70B",
    "license": "mit",
    "context_length": 131072,
    "config": {
      "chat_template": "{% if not add_generation_prompt is defined %}{% set add_generation_prompt = false %}{% endif %}{% set system_prompt='' %}{% set is_tool = false %}{%- for message in messages %}{%- if message['role'] == 'system' %}{% set system_prompt = message['content'] %}{%- endif %}{%- endfor %}{{bos_token}}{{system_prompt}}{%- for message in messages %}{%- if message['role'] == 'user' %}{%- set is_tool = false -%}{{'<｜User｜>' + message['content']}}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is none %}{%- set is_tool = false -%}{%- set is_output_first = true -%}{%- set is_first = false -%}{%- for tool in message['tool_calls']%}{%- if is_first %}{{'<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{%- set is_first = true -%}{%- else %}{{'\\n' + '<｜tool▁call▁begin｜>' + tool['type'] + '<｜tool▁sep｜>' + tool['function']['name'] + '\\n' + '```json' + '\\n' + tool['function']['arguments'] + '\\n' + '```' + '<｜tool▁call▁end｜>'}}{{'<｜tool▁calls▁end｜><｜end▁of▁sentence｜>'}}{%- endif %}{%- endfor %}{%- endif %}{%- if message['role'] == 'assistant' and message['content'] is not none %}{%- if is_tool %}{{'<｜tool▁outputs▁end｜>' + message['content'] + '<｜end▁of▁sentence｜>'}}{%- set is_tool = false -%}{%- else %}{% set content = message['content'] %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}{{'<｜Assistant｜>' + content + '<｜end▁of▁sentence｜>'}}{%- endif %}{%- endif %}{%- if message['role'] == 'tool' %}{%- set is_tool = true -%}{%- if is_output_first %}{{'<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- set is_output_first = false %}{%- else %}{{'\\n<｜tool▁output▁begin｜>' + message['content'] + '<｜tool▁output▁end｜>'}}{%- endif %}{%- endif %}{%- endfor -%}{% if is_tool %}{{'<｜tool▁outputs▁end｜>'}}{% endif %}{% if add_generation_prompt and not is_tool %}{{'<｜Assistant｜>'}}{% endif %}",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ],
      "bos_token": "<｜begin▁of▁sentence｜>",
      "eos_token": "<｜end▁of▁sentence｜>",
      "max_output_length": 32768
    },
    "pricing": {
      "hourly": 0,
      "input": 2,
      "output": 2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-3.2-11B-Vision-Instruct-Turbo",
    "object": "model",
    "created": 1727218691,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3.2 11B Vision Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-405B-Instruct",
    "license": "llama",
    "context_length": 131072,
    "config": {
      "chat_template": "{% for message in messages %}\n{% if loop.index0 == 0 %}{{ bos_token }}{% endif %}\n{{ '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n{% if message['content'] is string %}\n{{ message['content'] }}\n{% else %}\n{% for content in message['content'] | sort(attribute=\"type\") %}\n{% if content['type'] == 'image' %}\n{{ '<|image|>' }}\n{% elif content['type'] == 'text' %}\n{{ content['text'] }}\n{% endif %}\n{% endfor %}\n{% endif %}\n{{ '<|eot_id|>' }}\n{% endfor %}\n{% if add_generation_prompt %}\n{{ '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{% endif %}",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B",
    "object": "model",
    "created": 1738185844,
    "type": "chat",
    "running": false,
    "display_name": "DeepSeek R1 Distill Qwen 1.5B",
    "organization": "DeepSeek",
    "link": "https://huggingface.co/deepseek-ai/DeepSeek-R1-Distill-Qwen-1.5B",
    "license": "mit",
    "context_length": 131072,
    "config": {
      "chat_template": "{% if not add_generation_prompt %}{% set add_generation_prompt = false %}{% endif %}{# Initialize variables since Nunjucks doesn't support namespace #}{% set is_first = false %}{% set is_tool = false %}{% set is_output_first = true %}{% set system_prompt = '' %}{# Get system prompt #}{% for message in messages %}{% if message.role == 'system' %}{% set system_prompt = message.content %}{% endif %}{% endfor %}{{bos_token}}{{system_prompt}}{% for message in messages %}{% if message.role == 'user' %}{% set is_tool = false %}<｜User｜>{{message.content}}{% endif %}{% if message.role == 'assistant' and not message.content %}{% set is_tool = false %}{% for tool in message.tool_calls %}{% if not is_first %}<｜Assistant｜><｜tool▁calls▁begin｜><｜tool▁call▁begin｜>{{tool.type}}<｜tool▁sep｜>{{tool.function.name}}```json{{tool.function.arguments}}```<｜tool▁call▁end｜>{% set is_first = true %}{% else %}<｜tool▁call▁begin｜>{{tool.type}}<｜tool▁sep｜>{{tool.function.name}}```json{{tool.function.arguments}}```<｜tool▁call▁end｜><｜tool▁calls▁end｜><｜end▁of▁sentence｜>{% endif %}{% endfor %}{% endif %}{% if message.role == 'assistant' and message.content %}{% if is_tool %}<｜tool▁outputs▁end｜>{{message.content}}<｜end▁of▁sentence｜>{% set is_tool = false %}{% else %}{% set content = message.content %}{% if '</think>' in content %}{% set parts = content | split('</think>') %}{% set content = parts[parts.length-1] %}{% endif %}<｜Assistant｜>{{content}}<｜end▁of▁sentence｜>{% endif %}{% endif %}{% if message.role == 'tool' %}{% set is_tool = true %}{% if is_output_first %}<｜tool▁outputs▁begin｜><｜tool▁output▁begin｜>{{message.content}}<｜tool▁output▁end｜>{% set is_output_first = false %}{% else %}<｜tool▁output▁begin｜>{{message.content}}<｜tool▁output▁end｜>{% endif %}{% endif %}{% endfor %}{% if is_tool %}<｜tool▁outputs▁end｜>{% endif %}{% if add_generation_prompt and not is_tool %}<｜Assistant｜>{% endif %}",
      "stop": [
        "<｜end▁of▁sentence｜>"
      ],
      "bos_token": "<｜begin▁of▁sentence｜>",
      "eos_token": "<｜end▁of▁sentence｜>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-3.2-90B-Vision-Instruct-Turbo",
    "object": "model",
    "created": 1727227657,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3.2 90B Vision Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-3.2-90B-Vision-Instruct",
    "license": "llama",
    "context_length": 131072,
    "config": {
      "chat_template": "{% for message in messages %}\n{% if loop.index0 == 0 %}{{ bos_token }}{% endif %}\n{{ '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n{% if message['content'] is string %}\n{{ message['content'] }}\n{% else %}\n{% for content in message['content'] | sort(attribute=\"type\") %}\n{% if content['type'] == 'image' %}\n{{ '<|image|>' }}\n{% elif content['type'] == 'text' %}\n{{ content['text'] }}\n{% endif %}\n{% endfor %}\n{% endif %}\n{{ '<|eot_id|>' }}\n{% endfor %}\n{% if add_generation_prompt %}\n{{ '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{% endif %}",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 1.2,
      "output": 1.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Meta-Llama-3-8B-Instruct-Lite",
    "object": "model",
    "created": 0,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3 8B Instruct Lite",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct",
    "license": "Llama-3 (Other)",
    "context_length": 8192,
    "config": {
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "stop": [
        "<|eot_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|end_of_text|>",
      "max_output_length": 8192
    },
    "pricing": {
      "hourly": 0,
      "input": 0.1,
      "output": 0.1,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1-schnell",
    "object": "model",
    "created": 0,
    "type": "image",
    "running": false,
    "display_name": "FLUX.1 Schnell",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-schnell",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "mistralai/Mixtral-8x7B-Instruct-v0.1",
    "object": "model",
    "created": 1702342468,
    "type": "chat",
    "running": false,
    "display_name": "Mixtral-8x7B Instruct v0.1",
    "organization": "mistralai",
    "link": "https://huggingface.co/mistralai/Mixtral-8x7B-Instruct-v0.1",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "stop": [
        "[/INST]",
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.6,
      "output": 0.6,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-3-70b-chat-hf",
    "object": "model",
    "created": 1713429236,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3 70B Instruct Reference",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-70B-Instruct",
    "license": "Llama-3 (Other)",
    "context_length": 8192,
    "config": {
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "stop": [
        "<|eot_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|end_of_text|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.88,
      "output": 0.88,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "mistralai/Mistral-7B-Instruct-v0.3",
    "object": "model",
    "created": 1716406261,
    "type": "chat",
    "running": false,
    "display_name": "Mistral (7B) Instruct v0.3",
    "organization": "mistralai",
    "link": "https://huggingface.co/api/models/mistralai/Mistral-7B-Instruct-v0.3",
    "license": "apache-2.0",
    "context_length": 32768,
    "config": {
      "chat_template": "{% if messages[0]['role'] == 'system' %}{% set loop_messages = messages[1:] %}{% set system_message = messages[0]['content'] %}{% else %}{% set loop_messages = messages %}{% set system_message = false %}{% endif %}{% for message in loop_messages %}{% if loop.index0 == 0 and system_message != false %}{% set content = '<<SYS>>\\n' + system_message + '\\n<</SYS>>\\n\\n' + message['content'] %}{% else %}{% set content = message['content'] %}{% endif %}{% if message['role'] == 'user' or message['role'] == 'tool' %}{{ bos_token + '[INST] ' + content + ' [/INST]' }}{% elif message['role'] == 'system' %}{{ '<<SYS>>\\n' + content + '\\n<</SYS>>\\n\\n' }}{% elif message['role'] == 'assistant' %}{{ ' '  + content + ' ' + eos_token }}{% endif %}{% endfor %}",
      "stop": [
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.2,
      "output": 0.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Salesforce/Llama-Rank-V1",
    "object": "model",
    "created": 1723745254,
    "type": "rerank",
    "running": false,
    "display_name": "Salesforce Llama Rank V1 (8B)",
    "organization": "salesforce",
    "license": "llama3",
    "context_length": 8192,
    "config": {
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{% if add_generation_prompt %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\nAfter carefully reading the query, document, and guidelines, I have determined that the relevance score is: ' }}{% endif %}",
      "stop": [
        "<|eot_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.1,
      "output": 0.1,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "nvidia/Llama-3.1-Nemotron-70B-Instruct-HF",
    "object": "model",
    "created": 1731110984,
    "type": "chat",
    "running": false,
    "display_name": "Llama 3.1 Nemotron 70B Instruct HF",
    "organization": "nvidia",
    "link": "https://huggingface.co/nvidia/Llama-3.1-Nemotron-70B-Instruct-HF",
    "license": "llama3.1",
    "context_length": 32768,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.88,
      "output": 0.88,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-Vision-Free",
    "object": "model",
    "created": 1727236346,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama Vision Free",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-3.2-11B-Vision-Instruct",
    "license": "llama",
    "context_length": 131072,
    "config": {
      "chat_template": "{% for message in messages %}\n{% if loop.index0 == 0 %}{{ bos_token }}{% endif %}\n{{ '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n' }}\n{% if message['content'] is string %}\n{{ message['content'] }}\n{% else %}\n{% for content in message['content'] | sort(attribute=\"type\") %}\n{% if content['type'] == 'image' %}\n{{ '<|image|>' }}\n{% elif content['type'] == 'text' %}\n{{ content['text'] }}\n{% endif %}\n{% endfor %}\n{% endif %}\n{{ '<|eot_id|>' }}\n{% endfor %}\n{% if add_generation_prompt %}\n{{ '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{% endif %}",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-Guard-3-11B-Vision-Turbo",
    "object": "model",
    "created": 1727242489,
    "type": "moderation",
    "running": false,
    "display_name": "Meta Llama Guard 3 11B Vision Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-Guard-3-11B-Vision",
    "license": "llama",
    "context_length": 131072,
    "config": {
      "chat_template": "{%- if messages|length % 2 == 0 -%}\n    {%- set role = 'Agent' -%}\n{%-  else -%}\n    {%-  set role = 'User' -%}\n{%-  endif -%}\n{%-  if categories is not defined -%}\n    {%-  \n        set categories = ({\n            \"S1\": \"Violent Crimes.\",\n            \"S2\": \"Non-Violent Crimes.\",\n            \"S3\": \"Sex Crimes.\",\n            \"S4\": \"Child Exploitation.\",\n            \"S5\": \"Defamation.\",\n            \"S6\": \"Specialized Advice.\",\n            \"S7\": \"Privacy.\",\n            \"S8\": \"Intellectual Property.\",\n            \"S9\": \"Indiscriminate Weapons.\",\n            \"S10\": \"Hate.\",\n            \"S11\": \"Self-Harm.\",\n            \"S12\": \"Sexual Content.\",\n            \"S13\": \"Elections.\",\n        })\n    -%}\n{%-  endif -%}\n\n{{- \"<|begin_of_text|><|start_header_id|>user<|end_header_id|>\\n\\n\" -}}\n{%- set ns = namespace(contains_image=false) -%}\n{%-  for message in messages -%}\n    {%- for content in message['content'] | selectattr('type', 'equalto', 'image') -%}\n        {%- set ns.contains_image = true -%}\n    {%- endfor -%}\n{%- endfor -%}\n{%- if ns.contains_image -%}\n{{- \"<|image|> \"-}}\n{%- endif -%}\n{{- \"Task: Check if there is unsafe content in '\" + role + \"' messages in conversations according our safety policy with the below categories.\\n\\n\" -}}\n{{- \"<BEGIN UNSAFE CONTENT CATEGORIES>\\n\"-}}\n\n{%-  for key in categories -%}\n    {%-  if key not in excluded_category_keys -%}\n        {{-key + \": \" + categories[key] + \"\\n\" -}}\n    {%-  endif -%}\n{%-  endfor -%}\n\n{{- \"<END UNSAFE CONTENT CATEGORIES>\\n\\n\"-}}\n{{- \"<BEGIN CONVERSATION>\\n\\n\"-}}\n{%-  for message in messages -%}\n    {%-  if (message['role'] == 'user') != (loop.index0 % 2 == 0) -%}\n        {{ raise_exception('Conversation roles must alternate user/assistant/user/assistant/...')-}}\n    {%-  endif -%}\n    {%-  set content = message['content'] -%}\n    {%-  if message['role'] == 'user' -%}\n        {%-  set role = 'User' -%}\n    {%-  elif message['role'] == 'assistant' -%}\n        {%-  set role = 'Agent' -%}\n    {%-  endif -%}\n    {%-  for content in message['content'] | selectattr('type', 'equalto', 'text') -%}\n{{- role + ': ' + content['text'] | trim + '\\n\\n'-}}\n    {%-  endfor -%}\n{%-  endfor -%}\n{{- \"<END CONVERSATION>\\n\\n\"-}}\n{{- \"Provide your safety assessment for ONLY THE LAST \" + role + \" message in the above conversation:\\n\"-}}\n{{- \" - First line must read 'safe' or 'unsafe'.\\n\"-}}\n{{- \" - If unsafe, a second line must include a comma-separated list of violated categories. <|eot_id|><|start_header_id|>assistant<|end_header_id|>\"-}}",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-3.2-3B-Instruct-Turbo",
    "object": "model",
    "created": 1727229064,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3.2 3B Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-3.2-3B-Instruct",
    "license": "Llama-3.1 (Other)",
    "context_length": 131072,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n        {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n        {{- '\"parameters\": ' }}\n        {{- tool_call.arguments | tojson }}\n        {{- \"}\" }}\n        {{- \"<|eot_id|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.060000000000000005,
      "output": 0.060000000000000005,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "black-forest-labs/FLUX.1-dev",
    "object": "model",
    "created": 1732138026,
    "type": "image",
    "running": false,
    "display_name": "FLUX.1 [dev]",
    "organization": "Black Forest Labs",
    "link": "https://huggingface.co/black-forest-labs/FLUX.1-dev",
    "config": {
      "chat_template": null,
      "stop": [],
      "bos_token": null,
      "eos_token": null
    },
    "pricing": {
      "hourly": 0,
      "input": 0,
      "output": 0,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Qwen/Qwen2.5-72B-Instruct-Turbo",
    "object": "model",
    "created": 1728633510,
    "type": "chat",
    "running": false,
    "display_name": "Qwen2.5 72B Instruct Turbo",
    "organization": "Qwen",
    "link": "https://huggingface.co/Qwen/Qwen2.5-72B-Instruct",
    "license": "Qwen",
    "context_length": 131072,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Qwen, created by Alibaba Cloud. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 1.2,
      "output": 1.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "arcee-ai/virtuoso-medium-v2",
    "object": "model",
    "created": 1743430178,
    "type": "chat",
    "running": false,
    "display_name": "Arcee AI Virtuoso-Medium",
    "organization": "Arcee AI",
    "link": "https://huggingface.co/api/models/togethercomputer/Virtuoso-Medium-v2",
    "license": "apache-2.0",
    "context_length": 131072,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Virtuoso Medium, created by Arcee AI. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.5,
      "output": 0.8,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "arcee-ai/virtuoso-large",
    "object": "model",
    "created": 1743515466,
    "type": "chat",
    "running": false,
    "display_name": "Arcee AI Virtuoso-Large",
    "organization": "Arcee AI",
    "link": "https://huggingface.co/api/models/togethercomputer/arcee-ai-Virtuoso-Large",
    "context_length": 131072,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Virtuoso Large, created by Arcee AI. You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.75,
      "output": 1.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "arcee-ai/maestro-reasoning",
    "object": "model",
    "created": 1743527998,
    "type": "chat",
    "running": false,
    "display_name": "Arcee AI Maestro",
    "organization": "Arcee AI",
    "link": "https://huggingface.co/api/models/togethercomputer/arcee-ai-maestro-32b-01",
    "context_length": 131072,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- '' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n  {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" and not message.tool_calls %}\n        {%- set content = message.content %}\n        {%- if not loop.last %}\n            {%- set content = message.content.split('</think>')[-1].lstrip('\\n') %}\n        {%- endif %}\n        {{- '<|im_start|>' + message.role + '\\n' + content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {%- set content = message.content %}\n        {%- if not loop.last %}\n            {%- set content = message.content.split('</think>')[-1].lstrip('\\n') %}\n        {%- endif %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n<think>\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.9,
      "output": 3.3,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "arcee-ai/coder-large",
    "object": "model",
    "created": 1743543441,
    "type": "chat",
    "running": false,
    "display_name": "Arcee AI Coder-Large",
    "organization": "Arcee AI",
    "link": "https://huggingface.co/api/models/togethercomputer/arcee-ai-coder-large",
    "context_length": 32768,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are Coder Large, created by Arcee AI. You are a helpful coding assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are Qwen, created by Alibaba Cloud. You are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.5,
      "output": 0.8,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "arcee_ai/arcee-spotlight",
    "object": "model",
    "created": 1743530644,
    "type": "chat",
    "running": false,
    "display_name": "Arcee AI Spotlight",
    "organization": "Arcee AI",
    "link": "https://huggingface.co/api/models/togethercomputer/arcee-ai-spotlight-export",
    "context_length": 131072,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are a helpful assistant.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>"
      ],
      "bos_token": "<|endoftext|>",
      "eos_token": "<|im_end|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "Qwen/QwQ-32B",
    "object": "model",
    "created": 1741207789,
    "type": "chat",
    "running": false,
    "display_name": "Qwen QwQ-32B",
    "organization": "Qwen",
    "link": "https://huggingface.co/Qwen/QwQ-32B",
    "license": "Qwen",
    "context_length": 131072,
    "config": {
      "chat_template": "{%- if tools %}\n    {{- '<|im_start|>system\\n' }}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- messages[0]['content'] }}\n    {%- else %}\n        {{- 'You are a helpful and harmless assistant. You are Qwen developed by Alibaba. You should think step-by-step.' }}\n    {%- endif %}\n    {{- \"\\n\\n# Tools\\n\\nYou may call one or more functions to assist with the user query.\\n\\nYou are provided with function signatures within <tools></tools> XML tags:\\n<tools>\" }}\n    {%- for tool in tools %}\n        {{- \"\\n\" }}\n        {{- tool | tojson }}\n    {%- endfor %}\n    {{- \"\\n</tools>\\n\\nFor each function call, return a json object with function name and arguments within <tool_call></tool_call> XML tags:\\n<tool_call>\\n{\\\"name\\\": <function-name>, \\\"arguments\\\": <args-json-object>}\\n</tool_call><|im_end|>\\n\" }}\n{%- else %}\n    {%- if messages[0]['role'] == 'system' %}\n        {{- '<|im_start|>system\\n' + messages[0]['content'] + '<|im_end|>\\n' }}\n    {%- else %}\n        {{- '<|im_start|>system\\nYou are a helpful assistant.<|im_end|>\\n' }}\n    {%- endif %}\n{%- endif %}\n{%- for message in messages %}\n    {%- if (message.role == \"user\") or (message.role == \"system\" and not loop.first) or (message.role == \"assistant\" and not message.tool_calls) %}\n        {{- '<|im_start|>' + message.role + '\\n' + message.content + '<|im_end|>' + '\\n' }}\n    {%- elif message.role == \"assistant\" %}\n        {{- '<|im_start|>' + message.role }}\n        {%- if message.content %}\n            {{- '\\n' + message.content }}\n        {%- endif %}\n        {%- for tool_call in message.tool_calls %}\n            {%- if tool_call.function is defined %}\n                {%- set tool_call = tool_call.function %}\n            {%- endif %}\n            {{- '\\n<tool_call>\\n{\"name\": \"' }}\n            {{- tool_call.name }}\n            {{- '\", \"arguments\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- '}\\n</tool_call>' }}\n        {%- endfor %}\n        {{- '<|im_end|>\\n' }}\n    {%- elif message.role == \"tool\" %}\n        {%- if (loop.index0 == 0) or (messages[loop.index0 - 1].role != \"tool\") %}\n            {{- '<|im_start|>user' }}\n        {%- endif %}\n        {{- '\\n<tool_response>\\n' }}\n        {{- message.content }}\n        {{- '\\n</tool_response>' }}\n        {%- if loop.last or (messages[loop.index0 + 1].role != \"tool\") %}\n            {{- '<|im_end|>\\n' }}\n        {%- endif %}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|im_start|>assistant\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|im_end|>",
        "<|endoftext|>"
      ],
      "bos_token": null,
      "eos_token": "<|im_end|>",
      "max_output_length": 32768
    },
    "pricing": {
      "hourly": 0,
      "input": 1.2,
      "output": 1.2,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-4-Scout-17B-16E-Instruct",
    "object": "model",
    "created": 1743878170,
    "type": "chat",
    "running": false,
    "display_name": "Llama 4 Scout Instruct (17Bx16E)",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Llama-4-Scout-17B-16E-Instruct",
    "license": "llama4",
    "context_length": 1048576,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- if strftime_now is defined %}\n        {%- set date_string = strftime_now(\"%d %b %Y\") %}\n    {%- else %}\n        {%- set date_string = \"26 Jul 2024\" %}\n    {%- endif %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- if messages[0]['content'] is string %}\n        {%- set system_message = messages[0]['content']|trim %}\n    {%- else %}\n        {#- FIXME: The processor requires an array, always. #}\n        {%- set system_message = messages[0]['content'][0]['text']|trim %}\n    {%- endif %}\n    {%- set messages = messages[1:] %}\n    {%- set user_supplied_system_message = true %}\n{%- else %}\n    {%- set system_message = \"\" %}\n    {%- set user_supplied_system_message = false %}\n{%- endif %}\n\n{#- System message if the user supplied one #}\n{%- if user_supplied_system_message %}\n    {{- \"<|header_start|>system<|header_end|>\\n\\n\" }}\n    {%- if tools is not none %}\n        {{- \"Environment: ipython\\n\" }}\n    {%- endif %}\n    {%- if tools is not none and not tools_in_user_message %}\n        {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n        {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n        {{- \"Do not use variables.\\n\\n\" }}\n        {%- for t in tools %}\n            {{- t | tojson(indent=4) }}\n            {{- \"\\n\\n\" }}\n        {%- endfor %}\n    {%- endif %}\n    {{- system_message }}\n    {{- \"<|eot|>\" }}\n{%- endif %}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_content = messages[0]['content'] %}\n        {%- set first_user_message = \"\" %}\n        {%- if first_content is string %}\n            {%- set first_user_message = first_content %}\n        {%- else %}\n            {%- for content in first_content %}\n                {%- if content['type'] == 'image' %}\n                    {%- set first_user_message = first_user_message + '<|image|>' %}\n                {%- elif content['type'] == 'text' %}\n                    {%- set first_user_message = first_user_message + content['text'] %}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n        {%- set first_user_message = first_user_message | trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|header_start|>user<|header_end|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n    {{- '<|header_start|>' + message['role'] + '<|header_end|>\\n\\n' }}\n        {%- if message['content'] is string %}\n            {{- message['content'] }}\n        {%- else %}\n            {%- for content in message['content'] %}\n                {%- if content['type'] == 'image' %}\n                    {{- '<|image|>' }}\n                {%- elif content['type'] == 'text' %}\n                    {{- content['text'] }}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n        {{- \"<|eot|>\" }}\n    {%- elif 'tool_calls' in message and message.tool_calls|length > 0 %}\n      {{- '<|header_start|>assistant<|header_end|>\\n\\n' -}}\n      {{- '<|python_start|>' }}\n        {%- if message['content'] is string %}\n            {{- message['content'] }}\n        {%- else %}\n            {%- for content in message['content'] %}\n                {%- if content['type'] == 'image' %}\n                    {{- '<|image|>' }}\n                {%- elif content['type'] == 'text' %}\n                    {{- content['text'] }}\n                {%- endif %}\n            {%- endfor %}\n        {%- endif %}\n      {{- '<|python_end|>' }}\n        {%- for tool_call in message.tool_calls %}\n          {{- '{\"name\": \"' + tool_call.function.name + '\", ' }}\n          {{- '\"parameters\": ' }}\n          {{- tool_call.function.arguments | tojson }}\n          {{- \"}\" }}\n        {%- endfor %}\n      {{- \"<|eot|>\" }}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|header_start|>ipython<|header_end|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|header_start|>assistant<|header_end|>\\n\\n' }}\n{%- endif %}",
      "stop": [
        "<|eot|>",
        "<|eom|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.5900000000000001,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Llama-2-70b-hf",
    "object": "model",
    "created": 1689720415,
    "type": "language",
    "running": false,
    "display_name": "LLaMA-2 (70B)",
    "organization": "Meta",
    "link": "https://huggingface.co/api/models/meta-llama/Llama-2-70b-hf",
    "license": "llama2",
    "context_length": 4096,
    "config": {
      "chat_template": null,
      "stop": [
        "</s>"
      ],
      "bos_token": "<s>",
      "eos_token": "</s>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.9,
      "output": 0.9,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo",
    "object": "model",
    "created": 1721698359,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3.1 405B Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-405B-Instruct",
    "license": "llama",
    "context_length": 130815,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 3.5,
      "output": 3.5,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo",
    "object": "model",
    "created": 1721603683,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3.1 70B Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-70B-Instruct",
    "license": "Llama-3.1 (Other)",
    "context_length": 131072,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.88,
      "output": 0.88,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Meta-Llama-3-8B-Instruct-Turbo",
    "object": "model",
    "created": 0,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3 8B Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct",
    "license": "Llama-3 (Other)",
    "context_length": 8192,
    "config": {
      "chat_template": "{% set loop_messages = messages %}{% for message in loop_messages %}{% set content = '<|start_header_id|>' + message['role'] + '<|end_header_id|>\n\n'+ message['content'] | trim + '<|eot_id|>' %}{% if loop.index0 == 0 %}{% set content = bos_token + content %}{% endif %}{{ content }}{% endfor %}{{ '<|start_header_id|>assistant<|end_header_id|>\n\n' }}",
      "stop": [
        "<|eot_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|end_of_text|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002,
      "base": 0,
      "finetune": 0
    }
  },
  {
    "id": "meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo",
    "object": "model",
    "created": 1741298134,
    "type": "chat",
    "running": false,
    "display_name": "Meta Llama 3.1 8B Instruct Turbo",
    "organization": "Meta",
    "link": "https://huggingface.co/meta-llama/Meta-Llama-3.1-8B-Instruct",
    "license": "Llama-3.1 (Other)",
    "context_length": 131072,
    "config": {
      "chat_template": "{{- bos_token }}\n{%- if custom_tools is defined %}\n    {%- set tools = custom_tools %}\n{%- endif %}\n{%- if not tools_in_user_message is defined %}\n    {%- set tools_in_user_message = true %}\n{%- endif %}\n{%- if not date_string is defined %}\n    {%- set date_string = \"26 Jul 2024\" %}\n{%- endif %}\n{%- if not tools is defined %}\n    {%- set tools = none %}\n{%- endif %}\n\n{#- This block extracts the system message, so we can slot it into the right place. #}\n{%- if messages[0]['role'] == 'system' %}\n    {%- set system_message = messages[0]['content']|trim %}\n    {%- set messages = messages[1:] %}\n{%- else %}\n    {%- set system_message = \"\" %}\n{%- endif %}\n\n{#- System message + builtin tools #}\n{{- \"<|start_header_id|>system<|end_header_id|>\\n\\n\" }}\n{%- if builtin_tools is defined or tools is not none %}\n    {{- \"Environment: ipython\\n\" }}\n{%- endif %}\n{%- if builtin_tools is defined %}\n    {{- \"Tools: \" + builtin_tools | reject('equalto', 'code_interpreter') | join(\", \") + \"\\n\\n\"}}\n{%- endif %}\n{{- \"Cutting Knowledge Date: December 2023\\n\" }}\n{{- \"Today Date: \" + date_string + \"\\n\\n\" }}\n{%- if tools is not none and not tools_in_user_message %}\n    {{- \"You have access to the following functions. To call a function, please respond with JSON for a function call.\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n{%- endif %}\n{{- system_message }}\n{{- \"<|eot_id|>\" }}\n\n{#- Custom tools are passed in a user message with some extra guidance #}\n{%- if tools_in_user_message and not tools is none %}\n    {#- Extract the first user message so we can plug it in here #}\n    {%- if messages | length != 0 %}\n        {%- set first_user_message = messages[0]['content']|trim %}\n        {%- set messages = messages[1:] %}\n    {%- else %}\n        {{- raise_exception(\"Cannot put tools in the first user message when there's no first user message!\") }}\n{%- endif %}\n    {{- '<|start_header_id|>user<|end_header_id|>\\n\\n' -}}\n    {{- \"Given the following functions, please respond with a JSON for a function call \" }}\n    {{- \"with its proper arguments that best answers the given prompt.\\n\\n\" }}\n    {{- 'Respond in the format {\"name\": function name, \"parameters\": dictionary of argument name and its value}.' }}\n    {{- \"Do not use variables.\\n\\n\" }}\n    {%- for t in tools %}\n        {{- t | tojson(indent=4) }}\n        {{- \"\\n\\n\" }}\n    {%- endfor %}\n    {{- first_user_message + \"<|eot_id|>\"}}\n{%- endif %}\n\n{%- for message in messages %}\n    {%- if not (message.role == 'ipython' or message.role == 'tool' or 'tool_calls' in message) %}\n        {{- '<|start_header_id|>' + message['role'] + '<|end_header_id|>\\n\\n'+ message['content'] | trim + '<|eot_id|>' }}\n    {%- elif 'tool_calls' in message %}\n        {%- if not message.tool_calls|length == 1 %}\n            {{- raise_exception(\"This model only supports single tool-calls at once!\") }}\n        {%- endif %}\n        {%- set tool_call = message.tool_calls[0].function %}\n        {%- if builtin_tools is defined and tool_call.name in builtin_tools %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- \"<|python_tag|>\" + tool_call.name + \".call(\" }}\n            {%- for arg_name, arg_val in tool_call.arguments | items %}\n                {{- arg_name + '=\"' + arg_val + '\"' }}\n                {%- if not loop.last %}\n                    {{- \", \" }}\n                {%- endif %}\n                {%- endfor %}\n            {{- \")\" }}\n        {%- else  %}\n            {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' -}}\n            {{- '{\"name\": \"' + tool_call.name + '\", ' }}\n            {{- '\"parameters\": ' }}\n            {{- tool_call.arguments | tojson }}\n            {{- \"}\" }}\n        {%- endif %}\n        {%- if builtin_tools is defined %}\n            {#- This means we're in ipython mode #}\n            {{- \"<|eom_id|>\" }}\n        {%- else %}\n            {{- \"<|eot_id|>\" }}\n        {%- endif %}\n    {%- elif message.role == \"tool\" or message.role == \"ipython\" %}\n        {{- \"<|start_header_id|>ipython<|end_header_id|>\\n\\n\" }}\n        {%- if message.content is mapping or message.content is iterable %}\n            {{- message.content | tojson }}\n        {%- else %}\n            {{- message.content }}\n        {%- endif %}\n        {{- \"<|eot_id|>\" }}\n    {%- endif %}\n{%- endfor %}\n{%- if add_generation_prompt %}\n    {{- '<|start_header_id|>assistant<|end_header_id|>\\n\\n' }}\n{%- endif %}\n",
      "stop": [
        "<|eot_id|>",
        "<|eom_id|>"
      ],
      "bos_token": "<|begin_of_text|>",
      "eos_token": "<|eot_id|>"
    },
    "pricing": {
      "hourly": 0,
      "input": 0.18000000000000002,
      "output": 0.18000000000000002,
      "base": 0,
      "finetune": 0
    }
  }
]